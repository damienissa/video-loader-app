//
//  DashboardWireframe.swift
//  youtube-loader-ios
//
//  Created by Dima Virych on 26.01.2020.
//  Copyright (c) 2020 Virych. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import BaseViper
import Core

final class DashboardWireframe: BaseWireframe {
    
    // MARK: - Private properties -

    private let storyboard = UIStoryboard(name: "Dashboard", bundle: nil)

    // MARK: - Module setup -

    init() {
        let moduleViewController = storyboard.instantiateViewController(ofType: DashboardViewController.self)
        super.init(viewController: moduleViewController)

        let interactor = DashboardInteractor(EngineFactory.createEngine())
        let presenter = DashboardPresenter(view: moduleViewController, interactor: interactor, wireframe: self)
        moduleViewController.presenter = presenter
    }

}

// MARK: - Extensions -

extension DashboardWireframe: DashboardWireframeInterface {
    
    func fillLoaded(video: UIVideoElement) {
        
        navigationController?.pushWireframe(DetailWireframe(video: video))
    }
}


// MARK: - Adapter

typealias UIVideo = Video

protocol DashboardFetch {
    
    func fetch(for url: URL, completion: @escaping (Result<UIVideoElement, Error>) -> Void)
}

extension Engine: DashboardFetch {
    
    func fetch(for url: URL, completion: @escaping (Result<UIVideoElement, Error>) -> Void) {
        
        fetchInfo(for: url) { result in
            do {
                let video = try result.get()
                completion(.success(UIVideoElement(video: video)))
            } catch {
                completion(.failure(error))
            }
        }
    }
}
