//
//  DetailWireframe.swift
//  youtube-loader-ios
//
//  Created by Dima Virych on 26.01.2020.
//  Copyright (c) 2020 Virych. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import BaseViper
import Core
import Networking

final class DetailWireframe: BaseWireframe {

    // MARK: - Private properties -

    private let storyboard = UIStoryboard(name: "Detail", bundle: nil)

    // MARK: - Module setup -

    init(video: UIVideoElement) {
    
        let moduleViewController = storyboard.instantiateViewController(ofType: DetailViewController.self)
        super.init(viewController: moduleViewController)

        let interactor = DetailInteractor(input: EngineFactory.createEngine(store: try! DatabaseManager.realm(inMemory: false)))
        let presenter = DetailPresenter(view: moduleViewController, interactor: interactor, wireframe: self)
        presenter.video = video
        moduleViewController.presenter = presenter
    }
}

// MARK: - Extensions -

extension DetailWireframe: DetailWireframeInterface {
}


// MARK: - Adapter

typealias Progress = (Int) -> Void
protocol DetailInput {
    
    func download(_ item: UIVideoElement.Resource, progress: Progress?, completion: ((UIVideoElement.Resource?, Error?) -> Void)!)
    func set(dest: String, for resource: UIVideoElement.Resource)
}

extension Engine: DetailInput {
    
    func download(_ item: UIVideoElement.Resource, progress: Progress?, completion: ((UIVideoElement.Resource?, Error?) -> Void)!) {
        
        guard let object = try? DatabaseManager.realm(inMemory: false).objects(String(describing: Resource.self)).filter("id == %@", item.id).first as? Resource else {
            return completion(nil, nil)
        }
        
        download(item: object, progress: progress) { result in
            
            switch result {
            case let .success(resource):
                completion(UIVideoElement.Resource(resource: resource), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }
    
    func set(dest: String, for resource: UIVideoElement.Resource) {
        
        if let resource = resource.resource {
            set(destination: dest, for: resource)
        }
    }
}
